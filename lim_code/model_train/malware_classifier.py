import numpy as np
from scipy import sparse


class MalwareSAFEWClient:
    def __init__(self, data, weights, malicious, id_):
        self.data = data
        self.id_ = id_
        self.weights = weights
        self.previous_weights = weights
        self.malicious = malicious

        self.X_installed = self.data.X_preinstalled
        self.y_installed = self.data.y_preinstalled
        self.N_installed = self.data.N_preinstalled

        if self.malicious and data.X_malicious is not None:
            self.install_malicious_app(data.X_malicious)

    def install_app(self, p_malware):
        """Install one app, malware with probability p_malware."""
        X_new, y_new, N_new = self.data.take_client_app(p_malware=p_malware)
        if N_new not in self.N_installed:
            self.X_installed = sparse.vstack((self.X_installed, X_new))
            self.y_installed = np.append(self.y_installed, y_new)
            self.N_installed = self.N_installed + [N_new]

    def install_malicious_app(self, X_malicious):
        self.X_installed = sparse.vstack((self.X_installed, X_malicious))
        self.y_installed = np.append(self.y_installed, self.data.y_malicious)
        self.N_installed = self.N_installed + [self.data.N_malicious]
